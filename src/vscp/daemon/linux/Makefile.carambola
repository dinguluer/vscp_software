EXECUTABLE=evscpd
SOURCES=vscpd.cpp \
	../../common/daemonvscp.cpp \
	../../common/clientlist.cpp \
	../../common/controlobject.cpp \
	../../common/devicelist.cpp \
	../../common/vscphelper.cpp \
	../../common/tcpipclientthread.cpp \
	../../common/dm.cpp \
	../../common/vscpvariable.cpp \
	../../common/interfacelist.cpp \
	../../common/userlist.cpp \
	../../common/udpthread.cpp \
	../../common/devicethread.cpp \
	../../common/vscptcpif.cpp \
	../../common/guid.cpp \
	../../../common/dllist.c \
	../../../common/configfile.cpp \
	../../../common/crc.c \
	../../../common/md5.cpp \
	../../../common/randPassword.cpp

CANALSOCKETCAN_SOURCES=socketcandrv.cpp socketcanobj.cpp dllist.c devicelist.cpp
CANALSOCKETCAN_OBJECTS=$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(CANALSOCKETCAN_SOURCES)))

OBJECTS=$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(SOURCES)))
LDFLAGS += -s

#all: socketcandrv.so
all: $(SOURCES) $(EXECUTABLE) socketcandrv.so
#all: $(SOURCES) $(EXECUTABLE)

# Build the Linux DL
%.so: %.o $(CANALSOCKETCAN_OBJECTS)
	$(CXX) -o $@ $(CANALSOCKETCAN_OBJECTS) $(DLFLAGS) $(LIBS)

clean:
	rm -f *.o *.so $(EXECUTABLE)

$(EXECUTABLE): $(OBJECTS)
ifeq (,$(findstring .cpp,$(SOURCES)))
	$(CC) $(LDFLAGS) $(OBJECTS) $(LIBS) -o $@
else
	$(CXX) $(LDFLAGS) $(OBJECTS) $(LIBS) -o $@
endif

.c.o:
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

.cpp.o:
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@

